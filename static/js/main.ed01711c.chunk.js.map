{"version":3,"sources":["Redux/actions.js","Redux/reduser.js","Redux/store.js","Components/ContactForm/ContactForm.styles.js","Components/ContactForm/ContactForm.js","Components/ContactList/ContactListStyles.js","Components/ContactList/ContactList.js","Components/Filter/Filter.styles.js","Components/Filter/Filter.js","Components/App/App.styles.js","Components/App/App.js","index.js"],"names":["addContact","createAction","payload","name","number","id","uuidv4","deleteContact","filterContacts","items","createReducer","state","filter","elem","combineReducers","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","contactsReduser","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","persistor","persistStore","Form","styled","form","Label","label","Btn","button","ContactForm","submit","change","onSubmit","type","pattern","title","required","onChange","value","ItemText","span","Item","li","ContactList","visibleContacts","deleteElement","map","i","onClick","Message","Filter","length","Container","div","App","useState","setName","setNumber","useSelector","dispatch","useDispatch","handleChange","e","target","actions","reset","preventDefault","find","contact","alert","normalizedFilter","toLowerCase","includes","handleFilter","contactId","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.ed01711c.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst addContact = createAction(\"addContact\", ({ name, number }) => {\r\n  return {\r\n    payload: {\r\n      name,\r\n      number,\r\n      id: uuidv4(),\r\n    },\r\n  };\r\n});\r\n\r\nconst deleteContact = createAction(\"deleteContact\");\r\nconst filterContacts = createAction(\"filterContacts\");\r\n\r\nexport { addContact, deleteContact, filterContacts };\r\n","import { createReducer, combineReducers } from \"@reduxjs/toolkit\";\r\nimport { addContact, deleteContact, filterContacts } from \"./actions\";\r\n\r\nconst items = createReducer([], {\r\n  [addContact]: (state, { payload }) => [...state, payload],\r\n  [deleteContact]: (state, { payload }) =>\r\n    state.filter((elem) => elem.id !== payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [filterContacts]: (state, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nimport contactsReduser from \"./reduser\";\r\n\r\nconst contactsPersistConfig = {\r\n  key: \"contacts\",\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReduser),\r\n  },\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }).concat(logger),\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n","import styled from \"@emotion/styled\";\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 400px;\n  padding: 20px;\n  border: 3px solid #212121;\n`;\n\nconst Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  width: 50%;\n  margin-bottom: 30px;\n  font-size: 20px;\n  font-weight: 800;\n`;\n\nconst Btn = styled.button`\n  width: 100px;\n  padding: 5px;\n  font-weight: 600;\n  background-color: #5d5dff;\n  border-radius: 5px;\n`;\n\nexport { Form, Label, Btn };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Form, Label, Btn } from \"./ContactForm.styles\";\n\nfunction ContactForm({ submit, change, number, name }) {\n  return (\n    <Form onSubmit={submit}>\n      <Label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={change}\n          value={name}\n        />\n      </Label>\n      <Label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          onChange={change}\n        />\n      </Label>\n      <Btn type=\"submit\">Add contact</Btn>\n    </Form>\n  );\n}\n\nContactForm.propTypes = {\n  submit: PropTypes.func.isRequired,\n  change: PropTypes.func.isRequired,\n  number: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n};\n\nexport default ContactForm;\n","import styled from \"@emotion/styled\";\n\nconst Btn = styled.button`\n  padding: 3px;\n  font-weight: 600;\n  background-color: #5d5dff;\n  border-radius: 5px;\n`;\n\nconst ItemText = styled.span`\n  margin-right: 30px;\n`;\n\nconst Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 10px;\n  width: 350px;\n  font-size: 18px;\n`;\n\nexport { Btn, ItemText, Item };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Btn, ItemText, Item } from \"./ContactListStyles\";\n\nconst ContactList = ({ contacts, visibleContacts, deleteElement }) => {\n  return (\n    contacts && (\n      <ul>\n        {visibleContacts.map(({ id, name, number }, i) => (\n          <Item key={id}>\n            <ItemText>\n              {`${i + 1})    `}\n              {name}: {number}\n            </ItemText>\n            <Btn type=\"button\" onClick={() => deleteElement(id)}>\n              Delete\n            </Btn>\n          </Item>\n        ))}\n      </ul>\n    )\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  visibleContacts: PropTypes.array.isRequired,\n  deleteElement: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import styled from \"@emotion/styled\";\n\nconst Label = styled.label`\n  display: flex;\n  justify-content: space-between;\n  width: 380px;\n  font-size: 18px;\n  font-weight: 600;\n`;\n\nconst Message = styled.span`\n  font-size: 18px;\n  font-weight: 400;\n  font-style: italic;\n`;\n\nexport { Label, Message };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Label, Message } from \"./Filter.styles\";\n\nconst Filter = ({ change, filter, contacts }) => {\n  return contacts.length !== 0 ? (\n    <Label>\n      Find contacts by Name\n      <input type=\"text\" name=\"Find contact\" value={filter} onChange={change} />\n    </Label>\n  ) : (\n    <Message>Your Phonebook don`t have contacts</Message>\n  );\n};\n\nFilter.propTypes = {\n  change: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n  contacts: PropTypes.array.isRequired,\n};\n\nexport default Filter;\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  padding: 20px;\n`;\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as actions from \"../../Redux/actions\";\n\nimport ContactForm from \"../ContactForm\";\nimport ContactList from \"../ContactList\";\nimport Filter from \"../Filter\";\nimport { Container } from \"./App.styles\";\n\nfunction App() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const contacts = useSelector((state) => state.contacts.items);\n  const filter = useSelector((state) => state.contacts.filter);\n  const dispatch = useDispatch();\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      case \"Find contact\":\n        dispatch(actions.filterContacts(value));\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (contacts.find((contact) => contact.name === name)) {\n      alert(`${name} is already in contacts`);\n      reset();\n      return;\n    }\n\n    dispatch(actions.addContact({ name, number }));\n    reset();\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const handleDeleteContact = (contactId) => {\n    dispatch(actions.deleteContact(contactId));\n  };\n\n  const handleFilter = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm\n        submit={handleSubmit}\n        change={handleChange}\n        name={name}\n        number={number}\n      />\n      <h2>Contacts</h2>\n      <Filter change={handleChange} filter={filter} contacts={contacts} />\n      <ContactList\n        contacts={contacts}\n        visibleContacts={handleFilter()}\n        deleteElement={handleDeleteContact}\n      />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store, persistor } from \"./Redux/store\";\nimport App from \"./Components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}